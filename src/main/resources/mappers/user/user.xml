<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.ssafy.triends.domain.user.mapper.UserMapper">

	<resultMap type="userDto" id="userDto">
		<result column="user_id" property="userId"/>
		<result column="id" property="id"/>
		<result column="password" property="password"/>
		<result column="name" property="name"/>
		<result column="tel" property="tel"/>
		<result column="profileimg" property="profileimg"/>
		<result column="email" property="email"/>
		<result column="admin" property="isAdmin"/>
	</resultMap>

	<resultMap id="commentDto" type="commentDto">
		<result column="comment_id" property="commentId"/>
		<result column="review_id" property="reviewId"/>
		<result column="user_id" property="userId"/>
		<result column="content" property="content"/>
		<result column="name" property="name"/>
	</resultMap>

	<resultMap id="onlyUserId" type="userPreferenceDto">
		<result property="userId" column="user_id" />
	</resultMap>

	<resultMap id="userPreferenceMap" type="userPreferenceDto" extends="onlyUserId">
		<collection property="contentTypes" column="user_id" javaType="list" ofType="ContentType" select="getUserPreferencesForMap"/>
	</resultMap>

	<select id="getUserPreferencesForMap" resultType="ContentType" parameterType="int">
		select ct.content_type_id, ct.name
		from userpreference up, content_type ct
		where user_id = #{userId} and up.content_type_id=ct.content_type_id
	</select>
	
	<select id="loginUser" parameterType="map" resultMap="userDto">
		select user_id, id, password, name, tel, profileimg, email, admin from users
		where id=#{userId} and password=#{userPwd}
	</select>
	
	<select id="userList" resultMap="userDto">
		select user_id, id, password, name, tel, profileimg, email, admin
		from users
	</select>
	
	<insert id="joinUser" parameterType="userDto" >
		insert into users (id, password, name, tel, profileimg, email) values
		(#{id}, #{password}, #{name}, #{tel}, #{profileimg}, #{email})
	</insert>
	
	<update id="modifyUser" parameterType="userDto">
		update users
		set password=#{password}, name=#{name}, tel=#{tel}, profileimg=#{profileimg}, email=#{email}
		where id=#{id}
	</update>

	<select id="getComment" parameterType="int" resultMap="commentDto">
		select comment_id, review_id, user_id, name, content from comment
		where user_id=#{userId};
	</select>

	<delete id="deleteComment" parameterType="int">
		delete from comment
		where comment_id=#{commentId};
	</delete>

	<select id="getOneUserPreferences" resultMap="userPreferenceMap" parameterType="int">
		select user_id
		from users
		where user_id = #{userId}
	</select>

	<select id="getAllOtherUsersPreferences" resultMap="userPreferenceMap" parameterType="int">
		select user_id
		from users
		where user_id != #{userId}
	</select>

	<insert id="registPreferences" parameterType="map">
		insert into userpreference (user_id, content_type_id)
		values
		       <foreach collection="preferenceIds" item="preferenceId" separator=",">
						 (#{userId}, #{preferenceId})
					 </foreach>
	</insert>

	<delete id="deletePreferences" parameterType="int">
		delete from userpreference
		where user_id=#{userId};
	</delete>

	<update id="saveRefreshToken" parameterType="map">
		update users
		set refresh_token=#{refreshToken}
		where user_id=#{userId}
	</update>

	<update id="removeRefreshToken" parameterType="int">
		update users
		set refresh_token=null
		where user_id=#{userId}
	</update>
</mapper>